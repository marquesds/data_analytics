import matplotlib.pyplot as plt
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
import streamlit as st
from prophet import Prophet

st.set_page_config(page_title="Tech Challenge", page_icon="üíª")

st.header("[Tech Challenge] Data Viz and Production Models")
st.subheader("An√°lise de dados do pre√ßo do barril de petr√≥leo")


@st.cache_data
def ler_dados():
    # Importando os dados da tabela HTML
    df = pd.read_html(
        "http://www.ipeadata.gov.br/ExibeSerie.aspx?module=m&serid=1650971490&oper=view"
    )[2]

    # Renomeando colunas
    df = df.rename(columns={0: "data", 1: "preco"})
    df = df.iloc[1:]

    # Formatando pre√ßo
    df["preco"] = df["preco"].astype("float")
    df["preco"] = df["preco"] / 100

    # Formatando data
    df["data"] = pd.to_datetime(df["data"], format="%d/%m/%Y")

    # Separando por ano e m√™s
    df["ano"] = df["data"].dt.year
    df["mes"] = df["data"].dt.month

    return df


df = ler_dados()

# Sele√ß√£o de anos
anos = [2019, 2020, 2021, 2022, 2023]
st.sidebar.title("Filtros")
anos = st.sidebar.multiselect("Selecione os anos", df["ano"].unique(), default=anos)
meses = st.sidebar.slider("Previs√£o em Meses", min_value=1, max_value=12, value=12)

# Filtrando dados
df_filtrado = df[df["ano"].isin(anos)]

# Agrupando por ano e m√™s para calcular a m√©dia de pre√ßo
df_media = df_filtrado.groupby(["ano", "mes"]).agg({"preco": "mean"}).reset_index()

# Criando o gr√°fico de pre√ßo hist√≥rico do barril de petr√≥leo
fig = px.line(
    df_filtrado,
    x="data",
    y="preco",
    labels={"data": "Data", "preco": "Pre√ßo"},
    title="Pre√ßo hist√≥rico do barril de petr√≥leo (USD)",
)
st.plotly_chart(fig, use_container_width=True)

# Criando o gr√°fico de pre√ßo m√©dio mensal do barril de petr√≥leo por ano
fig = px.line(
    df_media,
    x="mes",
    y="preco",
    color="ano",
    labels={"mes": "M√™s", "preco": "Pre√ßo m√©dio"},
    title="Pre√ßo m√©dio mensal do barril de petr√≥leo (USD) por ano",
)
st.plotly_chart(fig, use_container_width=True)
st.markdown(
    """
    Nestes gr√°ficos, √© poss√≠vel notar algumas tend√™ncias e eventos que podem ser relacionados a contextos geopol√≠ticos e econ√¥micos, incluindo a pandemia de COVID-19:
    
    1. *Volatilidade em 2020*: Observa-se uma significativa volatilidade no ano de 2020, o que poderia estar relacionado ao in√≠cio da pandemia de COVID-19. A pandemia teve um impacto profundo na demanda global por petr√≥leo devido a bloqueios e uma redu√ß√£o significativa nas viagens, o que poderia explicar a queda e as flutua√ß√µes nos pre√ßos.
    2. *Recupera√ß√£o em 2021*: O aumento dos pre√ßos em 2021 pode indicar uma recupera√ß√£o √† medida que as vacinas come√ßaram a ser distribu√≠das e os pa√≠ses come√ßaram a reabrir suas economias. Isso provavelmente levou a um aumento na demanda por petr√≥leo, refletindo-se em uma tend√™ncia de alta no pre√ßo.
    3. *Estabiliza√ß√£o em 2022*: Em 2022, parece haver uma estabiliza√ß√£o ou mesmo uma ligeira tend√™ncia de decl√≠nio nos pre√ßos. Isso pode ser um sinal de que os mercados est√£o come√ßando a se ajustar ao "novo normal" com demandas e ofertas de petr√≥leo se estabilizando ap√≥s as turbul√™ncias iniciais da pandemia.
    4. *Tend√™ncia em 2023*: A continuidade da tend√™ncia em 2023 poderia sugerir uma estabilidade no mercado de petr√≥leo ou a aus√™ncia de eventos significativos de perturba√ß√£o, mas isso dependeria da situa√ß√£o geopol√≠tica atual, como a estabilidade de regi√µes produtoras de petr√≥leo, pol√≠ticas de produ√ß√£o da OPEP, e outras tens√µes internacionais.
    """
)

st.subheader("Previs√£o do pre√ßo do barril de petr√≥leo")


@st.cache_data
def criar_previsao(df, periods=12):
    # Criando o modelo Prophet
    modelo = Prophet(daily_seasonality=True)
    modelo.fit(df[["data", "preco"]].rename(columns={"data": "ds", "preco": "y"}))

    # Criando dataframe de previs√£o
    futuro = modelo.make_future_dataframe(periods=periods, freq="M")
    previsao = modelo.predict(futuro)

    # Criando a figura Plotly
    fig = go.Figure()

    # Adicionando s√©rie original
    fig.add_trace(
        go.Scatter(x=df["data"], y=df["preco"], mode="lines", name="Dados Originais")
    )

    # Adicionando a previs√£o
    fig.add_trace(
        go.Scatter(x=previsao["ds"], y=previsao["yhat"], mode="lines", name="Previs√£o")
    )

    # Adicionando intervalos de incerteza
    fig.add_trace(
        go.Scatter(
            x=previsao["ds"],
            y=previsao["yhat_upper"],
            fill=None,
            mode="lines",
            line=dict(color="gray"),
            showlegend=False,
        )
    )
    fig.add_trace(
        go.Scatter(
            x=previsao["ds"],
            y=previsao["yhat_lower"],
            fill="tonexty",
            mode="lines",
            line=dict(color="gray"),
            showlegend=False,
        )
    )

    # Atualizando layouts
    fig.update_layout(
        title="Previs√£o de Pre√ßo do Barril de Petr√≥leo com Prophet",
        xaxis_title="Data",
        yaxis_title="Pre√ßo",
        legend_title="Legenda",
    )

    return fig


fig = criar_previsao(df=df_filtrado, periods=meses)
st.plotly_chart(fig, use_container_width=True)
st.markdown(
    """
    Como √© poss√≠vel observar, a tend√™ncia para 2024 √© de um aumento gradual no pre√ßo do barril de petr√≥leo, com uma faixa de incerteza que se amplia ao longo do tempo. Isso sugere que, embora haja uma tend√™ncia de alta, a volatilidade dos pre√ßos pode aumentar √† medida que nos afastamos do presente.
    """
)
